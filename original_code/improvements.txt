[+] Разбить все файлы по проектам.
[+] Добавить Unit-test framework (test_runner.hpp).
[+] Везде, где в переопределении виртуальных методов было ключевое слово "virtual" (по сути бесполезное) заменить его на "override" - т.е. если нет метода с сигнатурой в базовых классах, который мы хотим переопределить, то будет ошибка компиляции (ключевое слово "virtual" ошибку компиляции бы не дало).
[+] NULL заменить на nullptr.
[+] Добавить класс, отвечающий за обработку входных параметров.
[+] Убрать заборы //---.
[+] Разбить по файлам tFiniteElement, tAnalysis.
[+] Сделать FEM *.dll добавив #pragma warning(disable: 4251). Можно вернуть *.lib при желании.
[+] Добавить файл, содержащий правила для автоформатирования.
[+] Отформатировать все файлы cpp / hpp разом можно благодаря расширению https://marketplace.visualstudio.com/items?itemName=munyabe.FormatAllFiles.
[+] Приватные члены разместить в самом низу, публичные выше приватных, статические в самом верху (под typedef-ами).
[+] Убрать все NE и пр., заменить их на аналоги из mathdef::.
[+] Для switch добавить поведения для случая default - бросать исключение.
[+] Побавить макрос для пробрасывания исключений.
[+] Все статики разместить повыше, все typedef разместить повыше.
[+] У всех полей классов / структур добавить приставку m_.
[+] Всем деструкторам добавить приставку virtual, если в этом классе есть виртуальные методы.
[+] Убрать лишние инклюды.

[ ] Заменить map на unordered_map.
[ ] Пересмотреть места, где идет линейный поиск по массиву (поиск узлов, материалов, КЭ). Если это происходит частно в процессе работы программы, то может заменить например, на unordered_set?
[ ] Шаблонизировать Tensor и прочие классы (тем самым избавиться от real_t, small_t).
[ ] Убрать #define из NumTypes, т.к. real_t, small_t.

[ ] Все переменные в camelCase (убрать _ / __ на конце).
[ ] Везде, где напрямую идет получение доступа к полям классов / структур добавить методы Set / Get.
[ ] Просмотреть названия методов - переименовать в более удачные.
[ ] Названия всех методов / функций --> с большой буквы.
[ ] Все аргументы функций / методов --> в camelCase.
[ ] Все enum --> в CamelCase.
[ ] Чтобы у всех щаблонных типов аргументов в названии была приставка "T".
[ ] У шаблонных классов / структур в названии добавить приставку "t".
[ ] Добавить везде где можно приставку const.
[ ] Сделать приватными все возможные поля и методы.
[ ] Убрать dynamic_cast по возможности (медленный).
[ ] undef min / max.
[ ] Убрать из проекта файл, который NumTypes.
[ ] Добавить везде где нужно дополнительный перевод строки.
[ ] Отдельно объявлять переменные (без цепочек через запятую).
[ ] Для if / for добавить фигурные скобки.
[ ] Убрать лишние define.
[ ] Переименовать проект внутренний FEM (lib / dll) --> fem.
[ ] Переименовать глобальный проект FEM в какой-нибудь другой вариант.

[ ] Везде, где используется операция "new / delete" убрать и заменить на умные указатели, чтобы избежать утечек памяти и двойного удаления (хотя возможно не стоит, если нам важна скорость. Все же сырые казатели чуть более быстрые чем умные).
[ ] Заменить использование обычных указателей на умные указатели (везде, где скорость выполнения не принципиальна).
